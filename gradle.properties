//
// This file is to be applied to every subproject.
//

enableFeaturePreview('STABLE_PUBLISHING')

apply plugin: 'java'
apply plugin: 'maven'

String mavenGroupId = 'com.objy.javaulbtraining'
String mavenVersion = '1.0-SNAPSHOT'

[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'




// Java source settings
sourceCompatibility = '1.14'
sourceSets.main.java.srcDirs = ['src/main/java']

ext.isWindows	= org.gradle.internal.os.OperatingSystem.current().windows
ext.mycmd	= isWindows ? 'cmd' : 'bash'
ext.myflag	= isWindows ? '/c' : '-c'




//-----------------------------------------------------
// Set version values here...
//-----------------------------------------------------
ext.igVersion	= project.hasProperty('igVersion')	? igVersion 	:  '2021.1'
ext.objyVersion = project.hasProperty('objyVersion')	? objyVersion   :  '13.6.0' 	// default










repositories {
    mavenCentral();
    // You may define additional repositories, or even remove "mavenCentral()".
    // Read more about repositories here:
    //   http://www.gradle.org/docs/current/userguide/dependency_management.html#sec:repositories
}

dependencies {
    // Adding dependencies here will add the dependencies to each subproject.
    testCompile group: 'junit', name: 'junit', version: '4.10'
}

String mavenArtifactId = name

group = mavenGroupId
version = mavenVersion

task sourcesJar(type: Jar, dependsOn: classes, description: 'Creates a jar from the source files.') {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives jar
    archives sourcesJar
}

configure(install.repositories.mavenInstaller) {
    pom.project {
        groupId = mavenGroupId
        artifactId = mavenArtifactId
        version = mavenVersion
    }
}

task createFolders(description: 'Creates the source folders if they do not exist.') doLast {
    sourceSets*.allSource*.srcDirs*.each { File srcDir ->
        if (!srcDir.isDirectory()) {
            println "Creating source folder: ${srcDir}"
            srcDir.mkdirs()
        }
    }
}
