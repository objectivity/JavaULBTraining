

def LAB_NAME = "Lab02"



// Maven stuff...
description = 'JavaULB_Lab02'
group = "com.objy.javaulb.labs.lab02"
version = '1.0.0'




//-----------------------------------------------------
// Set version values here...
//-----------------------------------------------------
ext.igVersion       = rootProject.igVersion
ext.objyVersion     = rootProject.objyVersion
ext.objyinstalldir  = rootProject.objyinstalldir 
ext.objyHome        = rootProject.objyHome 





def xPROJECT_DIR        = "" + getProjectDir()
def PROJECT_DIR		= xPROJECT_DIR.replaceAll("\\\\", "/")

def LIB_DIR		= PROJECT_DIR + "/build/libs/"
def TEMP_DIR 		= PROJECT_DIR+"/tmp/"

def SCHEMA_FILE		= PROJECT_DIR+"/data/"+LAB_NAME+".schema"

def PMD_FILE            = PROJECT_DIR+"/data/"+LAB_NAME+".pmd"

def BOOTFILE_FULLPATH
def BOOTFILE_DIR

def RMDEL

if (System.getProperty('os.name').toLowerCase(Locale.ROOT).contains('windows')) {
    //---------------------------------------
    // Windows values here...
    //---------------------------------------
    BOOTFILE_DIR = "${PROJECT_DIR}/data/dbs"
    BOOTFILE_FULLPATH = "${BOOTFILE_DIR}/${LAB_NAME}.boot"
    PMD_FILE = "${PROJECT_DIR}/config/win/${LAB_NAME}.pmd"
    RMDEL = "DEL"
    
} else {
    //---------------------------------------
    // Non-Windows values here...
    //---------------------------------------
    //	BOOTFILE_DIR = "/NVMe/thingspan/dbs${DEPLOY_VERSION}"
    BOOTFILE_DIR = "${PROJECT_DIR}/data/dbs"
    BOOTFILE_FULLPATH = "${BOOTFILE_DIR}/${LAB_NAME}.boot"
    PMD_FILE = PROJECT_DIR+"/config/linux/${LAB_NAME}.pmd"
    RMDEL = "rm"
}


//==================================
// FD Variables
//==================================
def fdname           = project.hasProperty('fdname')            ? project.fdname            : "${LAB_NAME}"
def fddirhost        = project.hasProperty('fddirhost')         ? project.fddirhost         : InetAddress.getLocalHost().getHostName()
def fddirpath        = project.hasProperty('fddirpath')         ? project.fddirpath         : "${BOOTFILE_DIR}"
def jnldirhost       = project.hasProperty('jnldirhost')        ? project.jnldirhost        : InetAddress.getLocalHost().getHostName()
def jnldirpath       = project.hasProperty('jnldirpath')        ? project.jnldirpath        : "${fddirpath}" + "/jnl"
def bootfile         = "${fddirpath}/${fdname}.boot"

// When expressing the full, UNC path the "${fddirhost}::" causes havoc on Windows/DOS.


dependencies {
    implementation files(objydbCoreJar)
    implementation 'org.slf4j:slf4j-api:1.8.0-beta1'
    implementation 'org.slf4j:slf4j-log4j12:1.8.0-beta1'
    implementation 'log4j:log4j:1.2.17'
}

assemble.dependsOn("shadowJar")

shadowJar {
    configurations = [project.configurations.compileClasspath]
    zip64 true
}



project (':JavaULB_Lab02') {
    repositories {
        mavenLocal()
        maven { url 'https://repo1.maven.org/maven2' }
        maven { url 'https://mvnrepository.com/artifact' }
    }

    dependencies {
        implementation files(objydbCoreJar)
        implementation 'org.slf4j:slf4j-api:1.8.0-beta1'
        implementation 'org.slf4j:slf4j-log4j12:1.8.0-beta1'
        implementation 'log4j:log4j:1.2.17'
    }

    assemble.dependsOn("shadowJar")

    // Start shadowJar task before test phase
    test.dependsOn("shadowJar")
    
    
    // Configure the shadow jar task
    shadowJar {
        configurations = [project.configurations.compileClasspath]
        zip64 true        
    }
}




//==================================
// Tasks
//==================================

task envVars () {
    group = "JavaULB_Lab02"
    description = "Display the enviroment variables."
    doLast {
        println("------------------------------------------")
        println("objyHome     = $objyHome")
        println("PROJECT_DIR   = $PROJECT_DIR")
//        println("BUILD_DIR    = $BUILD_DIR")
	println("fdname       = $fdname")
	println("fddirhost    = $fddirhost")
	println("fddirpath    = $fddirpath")
        println("jnldirpath    = jnldirpath")
        println("bootfile     = $bootfile")
        println("------------------------------------------")
    }
}



task cb(type: GradleBuild) {
    group = "JavaULB_Lab02"
    description = "Clean and Build."
    tasks = [ 'clean', 'build' ]
}





// Create FD
task recreateFD(){
    group = "JavaULB_Lab02"
    description = "Recreate the federation."
    doLast{
        makeDir(fddirpath)
        makeDir(jnldirpath)

	println "fddirhost is  ${fddirhost}"
	println "fddirpath is  ${fddirpath}"
	println "fdname is     ${fdname}"
	println "bootfile is   ${bootfile}"


        // TODO: Check lockserver

        // cleanup fd
        exec {
            commandLine mycmd,  myflag, "objy deleteFD -standalone -bootfile ${bootfile}"
            //commandLine mycmd,  myflag, "objy cleanupFD -local -bootfile ${bootfile}"
            ignoreExitValue = true
        }

        // Delete FD
        exec {
            commandLine mycmd,  myflag, "objy deletefd -bootfile ${bootfile}"
            ignoreExitValue = true
        }

        // Create FD
        exec {
            commandLine mycmd,  myflag, "objy createfd -fdname ${fdname} -fdDirHost ${fddirhost} -fdDirPath ${fddirpath} -jnlDirHost ${jnldirhost} -jnlDirPath ${jnldirpath}"
            ignoreExitValue = true
        }
    }
}


// Load the schema into the federation.
task loadSchema () {
    group = "JavaULB_Lab02"
    description = "Load the schema into the federation."

    doLast{
        println("Loading core schema file: ${SCHEMA_FILE}")
        exec {
            commandLine mycmd, myflag, "objy DO -infile ${SCHEMA_FILE} -bootfile ${bootfile}"
            ignoreExitValue = true
        }

    }
}



//task applyPMD () {
//    doLast{
//        exec {
//            commandLine mycmd, myflag, "objy importPlacement -infile ${PMD_FILE} -bootfile ${bootfile}"
//            ignoreExitValue = true
//        }
//    }
//}




def appClassPath = "${LIB_DIR}/JavaULB_${LAB_NAME}-1.0.0-all.jar"


task run02a() {
    group = "JavaULB_Lab02"

    doLast{
	println("Running 'run02a'")
        println("LIB_DIR = ${LIB_DIR}")
        println("appClassPath = ${appClassPath}")

        javaexec{
            classpath = files("${appClassPath}")
            jvmArgs = [\
            "-Xmx8G", \
            "-DBOOT_FILE=${bootfile}", \
            "-Dlog4j.configuration=file:${PROJECT_DIR}/properties/log4j.properties", \
            "-Dcom.objy.suppress-loadpath=true"
            ]
            mainClass = "com.objy.javaulb.labs.lab02.Lab02aCreatePersonClass"
            standardInput = System.in
            if (project.hasProperty('args')) {
                    args(args.split(','))
            }
        }
    }
}

task run02b() {
    group = "JavaULB_Lab02"

    doLast{
	println("Running 'run02b'")
        println("LIB_DIR = ${LIB_DIR}")
        javaexec{
            classpath = files("${appClassPath}")
            jvmArgs = [\
            "-Xmx8G", \
            "-DBOOT_FILE=${bootfile}", \
            "-Dlog4j.configuration=file:${PROJECT_DIR}/properties/log4j.properties", \
            "-Dcom.objy.suppress-loadpath=true"
            ]
            mainClass = "com.objy.javaulb.labs.lab02.Lab02bReadPersonSchema"
            standardInput = System.in
            if (project.hasProperty('args')) {
                    args(args.split(','))
            }
        }
    }
}

task run02c() {
    group = "JavaULB_Lab02"

    doLast{
	println("Running 'run02c'")
        println("LIB_DIR = ${LIB_DIR}")
        javaexec{
            classpath = files("${appClassPath}")
            jvmArgs = [\
            "-Xmx8G", \
            "-DBOOT_FILE=${bootfile}", \
            "-Dlog4j.configuration=file:${PROJECT_DIR}/properties/log4j.properties", \
            "-Dcom.objy.suppress-loadpath=true"
            ]
            mainClass = "com.objy.javaulb.labs.lab02.Lab02cNumbers"
            standardInput = System.in
            if (project.hasProperty('args')) {
                    args(args.split(','))
            }
        }
    }
}


task run02d() {
    group = "JavaULB_Lab02"

    doLast{
	println("Running 'run02d'")
        println("LIB_DIR = ${LIB_DIR}")
        javaexec{
            classpath = files("${appClassPath}")
            jvmArgs = [\
            "-Xmx8G", \
            "-DBOOT_FILE=${bootfile}", \
            "-Dlog4j.configuration=file:${PROJECT_DIR}/properties/log4j.properties", \
            "-Dcom.objy.suppress-loadpath=true"
            ]
            mainClass = "com.objy.javaulb.labs.lab02.Lab02dSimpleReferences"
            standardInput = System.in
            if (project.hasProperty('args')) {
                    args(args.split(','))
            }
        }
    }
}

task run02e() {
    group = "JavaULB_Lab02"

    doLast{
	println("Running 'run02e'")
        println("LIB_DIR = ${LIB_DIR}")
        javaexec{
            classpath = files("${appClassPath}")
            jvmArgs = [\
            "-Xmx8G", \
            "-DBOOT_FILE=${bootfile}", \
            "-Dlog4j.configuration=file:${PROJECT_DIR}/properties/log4j.properties", \
            "-Dcom.objy.suppress-loadpath=true"
            ]
            mainClass = "com.objy.javaulb.labs.lab02.Lab02eBidirRefToOneToOne"
            standardInput = System.in
            if (project.hasProperty('args')) {
                    args(args.split(','))
            }
        }
    }
}

task run02f() {
    group = "JavaULB_Lab02"

    doLast{
	println("Running 'run02f'")
        println("LIB_DIR = ${LIB_DIR}")
        javaexec{
            classpath = files("${appClassPath}")
            jvmArgs = [\
            "-Xmx8G", \
            "-DBOOT_FILE=${bootfile}", \
            "-Dlog4j.configuration=file:${PROJECT_DIR}/properties/log4j.properties", \
            "-Dcom.objy.suppress-loadpath=true"
            ]
            mainClass = "com.objy.javaulb.labs.lab02.Lab02fListOfStrings"
            standardInput = System.in
            if (project.hasProperty('args')) {
                    args(args.split(','))
            }
        }
    }
}

task run02g() {
    dependsOn recreateFD

    group = "JavaULB_Lab02"

    doLast{
	println("Running 'run02g'")
        println("LIB_DIR = ${LIB_DIR}")
        javaexec{
            classpath = files("${appClassPath}")
            jvmArgs = [\
            "-Xmx8G", \
            "-DBOOT_FILE=${bootfile}", \
            "-Dlog4j.configuration=file:${PROJECT_DIR}/properties/log4j.properties", \
            "-Dcom.objy.suppress-loadpath=true"
            ]
            mainClass = "com.objy.javaulb.labs.lab02.Lab02gBiDirRefToManyToOne"
            standardInput = System.in
            if (project.hasProperty('args')) {
                    args(args.split(','))
            }
        }
    }
}

task run02h() {
    dependsOn recreateFD

    group = "JavaULB_Lab02"

    doLast{
	println("Running 'run02h'")
        println("LIB_DIR = ${LIB_DIR}")
        javaexec{
            classpath = files("${appClassPath}")
            jvmArgs = [\
            "-Xmx8G", \
            "-DBOOT_FILE=${bootfile}", \
            "-Dlog4j.configuration=file:${PROJECT_DIR}/properties/log4j.properties", \
            "-Dcom.objy.suppress-loadpath=true"
            ]
            mainClass = "com.objy.javaulb.labs.lab02.Lab02hBiDirRefToManyToMany"
            standardInput = System.in
            if (project.hasProperty('args')) {
                    args(args.split(','))
            }
        }
    }
}


task run02i() {
    dependsOn recreateFD

    group = "JavaULB_Lab02"

    doLast{
	println("Running 'run02i'")
        println("LIB_DIR = ${LIB_DIR}")
        println("PROJECT_DIR = ${PROJECT_DIR}")
        javaexec{
            classpath = files("${appClassPath}")
            jvmArgs = [\
            "-Xmx8G", \
            "-DBOOT_FILE=${bootfile}", \
            "-Dlog4j.configuration=file:${PROJECT_DIR}/properties/log4j.properties", \
            "-Dcom.objy.suppress-loadpath=true"
            ]
            mainClass = "com.objy.javaulb.labs.lab02.Lab02iSetUniDirRefToMany"
            standardInput = System.in
            if (project.hasProperty('args')) {
                    args(args.split(','))
            }
        }
    }
}

task run02j() {
    dependsOn recreateFD

    group = "JavaULB_Lab02"

    doLast{
	println("Running 'run02i'")
        println("LIB_DIR = ${LIB_DIR}")
        println("PROJECT_DIR = ${PROJECT_DIR}")
        javaexec{
            classpath = files("${appClassPath}")
            jvmArgs = [\
            "-Xmx8G", \
            "-DBOOT_FILE=${bootfile}", \
            "-Dlog4j.configuration=file:${PROJECT_DIR}/properties/log4j.properties", \
            "-Dcom.objy.suppress-loadpath=true"
            ]
            mainClass = "com.objy.javaulb.labs.lab02.Lab02jNameMapOfRefs"
            standardInput = System.in
            if (project.hasProperty('args')) {
                    args(args.split(','))
            }
        }
    }
}

task run02k() {
    dependsOn recreateFD

    group = "JavaULB_Lab02"

    doLast{
	println("Running 'run02i'")
        println("LIB_DIR = ${LIB_DIR}")
        println("PROJECT_DIR = ${PROJECT_DIR}")
        javaexec{
            classpath = files("${appClassPath}")
            jvmArgs = [\
            "-Xmx8G", \
            "-DBOOT_FILE=${bootfile}", \
            "-Dlog4j.configuration=file:${PROJECT_DIR}/properties/log4j.properties", \
            "-Dcom.objy.suppress-loadpath=true"
            ]
            mainClass = "com.objy.javaulb.labs.lab02.Lab02kHashMapOfRefs"
            standardInput = System.in
            if (project.hasProperty('args')) {
                    args(args.split(','))
            }
        }
    }
}

task run02l() {
    dependsOn recreateFD

    group = "JavaULB_Lab02"

    doLast{
	println("Running 'run02i'")
        println("LIB_DIR = ${LIB_DIR}")
        println("PROJECT_DIR = ${PROJECT_DIR}")
        javaexec{
            classpath = files("${appClassPath}")
            jvmArgs = [\
            "-Xmx8G", \
            "-DBOOT_FILE=${bootfile}", \
            "-Dlog4j.configuration=file:${PROJECT_DIR}/properties/log4j.properties", \
            "-Dcom.objy.suppress-loadpath=true"
            ]
            mainClass = "com.objy.javaulb.labs.lab02.Lab02lTreeMapOfRefs"
            standardInput = System.in
            if (project.hasProperty('args')) {
                    args(args.split(','))
            }
        }
    }
}





task run02m() {
    dependsOn recreateFD

    group = "JavaULB_Lab02"

    doLast{
	println("Running 'run02i'")
        println("LIB_DIR = ${LIB_DIR}")
        println("PROJECT_DIR = ${PROJECT_DIR}")
        javaexec{
            classpath = files("${appClassPath}")
            jvmArgs = [\
            "-Xmx8G", \
            "-DBOOT_FILE=${bootfile}", \
            "-Dlog4j.configuration=file:${PROJECT_DIR}/properties/log4j.properties", \
            "-Dcom.objy.suppress-loadpath=true"
            ]
            mainClass = "com.objy.javaulb.labs.lab02.Lab02mInheritance"
            standardInput = System.in
            if (project.hasProperty('args')) {
                    args(args.split(','))
            }
        }
    }
}


task run02n() {
    group = "JavaULB_Lab02"

    doLast{
	println("Running 'run02j'")
        println("LIB_DIR = ${LIB_DIR}")
        println("PROJECT_DIR = ${PROJECT_DIR}")
        javaexec{
            classpath = files("${appClassPath}")
            jvmArgs = [\
            "-Xmx8G", \
            "-DBOOT_FILE=${bootfile}", \
            "-Dlog4j.configuration=file:${PROJECT_DIR}/properties/log4j.properties", \
            "-Dcom.objy.suppress-loadpath=true"
            ]
            mainClass = "com.objy.javaulb.labs.lab02.Lab02nEmbeddable"
            standardInput = System.in
            if (project.hasProperty('args')) {
                    args(args.split(','))
            }
        }
    }
}






def makeDir(dirPath){
    def folder = new File(dirPath)
    if(!folder.exists()){
        folder.mkdirs()
    }
}   



                                                                                                                                                                                                                         

